#! /bin/sh

##  toolbox for the Partclone
##  initial copied from VLC
##  Authors: thomas thomas at nchc dot org dot tw 

###
###  Get a sane environment, just in case
###
LC_ALL=C
export LC_ALL
LANG=C
export LANG

##
##  Give help
##
help()
{
  cat << EOF
recognized flags are:
  --update-po             update translation files
  --update-log            update Changelog files from SVN
  --update-version        generate src/version.c
EOF
  exit 1
}

###
###  argument check
###

if test "$1" = ""
then
  help
fi

case "$1" in
  --update-po)
    action=po
    ;;
  --update-log)
    action=changelog
    ;;
  --update-version)
    action=version
    ;;
  --help)
    help
    ;;
  *)
    echo "$0: unknown option $1"
    help
    ;;
esac
shift

##
##  Update the potfiles because no one ever does it
##
if test "${action}" = "po"
then
  # find out the source files
  echo "WARNING: you should run \"make update-po\" instead!" >&2
  cd po
  make update-po
  exit $?
fi

##
## update Changelog from SVN
##
if test "${action}" = "changelog"
then
  if which svn2cl 2>&1 >/dev/null; then
    svn2cl --reparagraph --break-before-msg=2
  else
    echo "WARNING: you should install subversion-tools firstly."
  fi
  exit $?
fi


##
##  Create version file
##
if test "${action}" = "version"
then
  if test -z "${srcdir}"; then
    srcdir="`sed -ne 's/^srcdir *= *//p' < Makefile`"
  fi
  if test -z "${builddir}"; then
    builddir="`sed -ne 's/^top_builddir *= *//p' < Makefile`"
  fi
  if test -z "${CC}"; then
    CC="`sed -ne 's/^CC *= *//p' < Makefile`"
  fi

  file="${builddir}/src/version.c"
  if which svnversion 2>&1 >/dev/null; then
    SVN_REVISION=Rev:`svnversion ${builddir}`
  else
    SVN_REVISION='exported'
  fi

  rm -f ${file}.tmp
  mkdir -p -- "${builddir}/src/"
  cat > ${file}.tmp << EOF
/* DO NOT EDIT THIS FILE - IT IS REGENERATED AT EVERY COMPILE -
 * IT GIVES BETTER TRACKING OF DEVELOPMENT VERSIONS
 * WHETHER THEY ARE BUILT BY OTHERS OR DURING DEVELOPMENT OR FOR THE
 * OFFICIAL PARTCLONE RELEASES.
 */
const char svn_version[] = "${SVN_REVISION}";

EOF
  if diff >/dev/null 2>&1 ${file} ${file}.tmp
  then
    rm -f ${file}.tmp
  else
    echo "creating new ${file}"
    mv -f ${file}.tmp ${file}
  fi

  exit 0
fi

